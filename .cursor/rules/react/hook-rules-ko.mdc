---
globs: packages/*/docs/ko/hook_*.md
alwaysApply: false
---

## Template(KOR)

- Create Hook's document files in the following format  
  ex) Hook's file route = `src/hooks/useAsyncLoading.tsx`

  ````md
  # useAsyncLoading

  [English]({relative URL}) | 한국어

  - 비동기 작업의 로딩 상태를 관리하기 위한 Hook입니다.
  - Promise를 인자로 받아 로딩 상태와 Promise 결과를 반환합니다.

  ## 기본 사용 예시

  ```tsx
  // don't write the example code
  ```

  ## API 문서

  - 반환 타입: 튜플

  ```typescript
  [isLoading: boolean, startTransition: function]
  ```

  | Name            | Type                            | Description                                                                                                                      |
  | --------------- | ------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |
  | isLoading       | boolean                         | startTransition으로 감싼 비동기 함수의 로딩 상태 <br> - 요청이 시작되면 `true`로 변경되고, 요청이 완료되면 `false`로 변경됩니다. |
  | startTransition | (req: Promise<T>) => Promise<T> | 로딩 처리를 위한 비동기 함수를 감싸는 메서드                                                                                     |
  ````

## template detail description

- title
- template: `#{HookName}`
- description
- Add One or Two lines of brief Description
- write by Each language
- example Code
- TOC(Table of Contents): `## 기본 사용 예시`
- language: tsx
- Just add code blocks and don't write the code
- API References
- TOC(Table of Contents): `## API 설명`
- Seperate by input and output of hook
- input
  - TOC title(input): `### Input({input type(tuple, object, etc)})`
  - Table Column Info
    - Name
    - Type
      - argument type
        - If the argument depends on the generic type, indicate it as generic type
    - Required(Mandatory Specification)
    - Description(One line of brief Description, write by Each language)
- output
  - TOC title(input): `### Output({input type(tuple, object, etc)})`
  - Add Return Type as TypeScript Code
  - Table Column Info
    - Name
    - Type
      - If the value depends on the generic type, indicate it as generic type
    - Description(One line of brief Description, write by Each language)
